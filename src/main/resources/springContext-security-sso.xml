<?xml version="1.0" encoding="UTF-8"?>
<b:beans xmlns:b="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
 	http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd"
 	profile="sso">


	<b:bean id="springSecurityFilterChainProxy" class="org.springframework.security.web.FilterChainProxy">
			<!-- allow spring security filter to apply rules on URL parameters -->
			<!-- 		<b:property name="stripQueryStringFromUrls" value="false" /> -->
	
		<b:constructor-arg>
			<b:list>

<!-- 		<sec:filter-chain-map> -->
			<sec:filter-chain pattern="/" filters="httpSessionIntegrationFilter" />
			<!-- allow rest wadl to be public with these rule -->
			<sec:filter-chain pattern="/webservice/services/**" filters="none" />
			<sec:filter-chain pattern="/webservice/api-docs/**" filters="CORSRequestFilter" />
			<sec:filter-chain pattern="/webservice/rest?_wadl" filters="none" />
			<sec:filter-chain pattern="/webservice/rest/?_wadl" filters="none" />
			<sec:filter-chain pattern="/webservice/rest/admin?_wadl" filters="none" />
			<sec:filter-chain pattern="/webservice/rest/user?_wadl" filters="none" />
			<sec:filter-chain pattern="/webservice/fineuploader?_wadl" filters="none" />

			<sec:filter-chain pattern="/webservice/rest/authentication/" filters="none" />
			<sec:filter-chain pattern="/webservice/rest/user/authentication/" filters="none" />
			<sec:filter-chain pattern="/webservice/rest/user/authentication/logout" filters="logoutFilterUser" />

			<sec:filter-chain pattern="/webservice/rest/user/v2/authentication/" filters="none" />
			<sec:filter-chain pattern="/webservice/rest/user/v2/authentication/logout" filters="logoutFilterUserV2" />

			<sec:filter-chain pattern="/webservice/rest/admin/authentication/" filters="none" />
			<sec:filter-chain pattern="/webservice/rest/admin/authentication/logout" filters="logoutFilterAdmin" />

			<sec:filter-chain pattern="/webservice/rest/uploadrequest/v2/**" filters="none" />
			<sec:filter-chain pattern="/webservice/rest/external/**" filters="none" />

			<sec:filter-chain pattern="/webservice/rest/plugin/information" filters="none" />
			<sec:filter-chain pattern="/webservice/rest/cors" filters="none" />
			<sec:filter-chain pattern="/webservice/rest/**"
				filters="httpSessionIntegrationFilter,CORSRequestFilter,lemonLDAPFilter,basicProcessingFilter,jwtAuthenticationFilter,basicExceptionTranslationFilter,filterSecurityInterceptor,logoutFilterAdmin, logoutFilterUser, logoutFilterUserV2" />

			<sec:filter-chain pattern="/webservice/fineuploader/**"
				filters="httpSessionIntegrationFilter,CORSRequestFilter,lemonLDAPFilter,basicProcessingFilter,jwtAuthenticationFilter,basicExceptionTranslationFilter,filterSecurityInterceptor" />

			<sec:filter-chain pattern="/webservice/**"
				filters="httpSessionIntegrationFilter, lemonLDAPFilter, basicProcessingFilter,jwtAuthenticationFilter,basicExceptionTranslationFilter ,filterSecurityInterceptor" />
			<sec:filter-chain pattern="/**"
				filters="httpSessionIntegrationFilter,lemonLDAPFilter,exceptionTranslationFilter,logoutFilter,rememberMeProcessingFilter,filterSecurityInterceptor" />
<!-- 		</sec:filter-chain-map> -->
		</b:list>
		</b:constructor-arg>
	</b:bean>

	<!-- REMEMBER-ME SERVICE DEFINITION -->
	<b:bean id="rememberMeAuthenticationProvider" class="org.springframework.security.authentication.RememberMeAuthenticationProvider">
		<b:constructor-arg value="springRocks" />
	</b:bean>

	<b:bean id="rememberMeAccountProvider" class="org.linagora.linshare.auth.rememberme.RememberMeAccountProvider">
		<b:constructor-arg ref="accountService" />
	</b:bean>

	<b:bean id="rememberMeService" class="org.linagora.linshare.view.tapestry.services.impl.LinshareRememberMeServices">
		<b:constructor-arg value="springRocks" />
		<b:constructor-arg ref="rememberMeAccountProvider" />
		<b:constructor-arg ref="cookieRepository" />
		<b:property name="cookieRepository" ref="cookieRepository" />
		<b:property name="alwaysRemember" value="false" />
	</b:bean>

	<b:bean id="rememberMeProcessingFilter" class="org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter">
		<b:constructor-arg ref="rememberMeService"/>
		<b:constructor-arg ref="authenticationManager"/>
	</b:bean>

	<!-- FILTERS DEFINITION -->
	<b:bean id="httpSessionIntegrationFilter" class="org.springframework.security.web.context.SecurityContextPersistenceFilter" >
<!-- 		<b:property name="forceEagerSessionCreation" value="true"/> -->
	</b:bean>

	<b:bean id="exceptionTranslationFilter" class="org.springframework.security.web.access.ExceptionTranslationFilter">
		<b:constructor-arg ref="authenticationEntryPoint"/>
<!-- 		<b:constructor-arg ref="requestCache"/> -->
	</b:bean>

	<b:bean id="authenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<b:constructor-arg value="/"/>
	</b:bean>

	<b:bean id="logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
		<b:constructor-arg value="/" />
		<b:constructor-arg>
			<b:list>
				<b:ref bean="rememberMeService" />
				<b:bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />
			</b:list>
		</b:constructor-arg>
	</b:bean>

	<b:bean id="logoutFilterAdmin" class="org.springframework.security.web.authentication.logout.LogoutFilter">
		<b:property name="filterProcessesUrl">
			<b:value>/webservice/rest/admin/authentication/logout</b:value>
		</b:property>
		<b:constructor-arg value="/webservice/rest/admin/authentication/" />
		<b:constructor-arg>
			<b:list>
				<b:ref bean="rememberMeService" />
				<b:bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />
			</b:list>
		</b:constructor-arg>
	</b:bean>

	<b:bean id="logoutFilterUser" class="org.springframework.security.web.authentication.logout.LogoutFilter">
		<b:property name="filterProcessesUrl">
			<b:value>/webservice/rest/user/authentication/logout</b:value>
		</b:property>
		<b:constructor-arg value="/webservice/rest/user/authentication/" />
		<b:constructor-arg>
			<b:list>
				<b:ref bean="rememberMeService" />
				<b:bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />
			</b:list>
		</b:constructor-arg>
	</b:bean>

	<b:bean id="logoutFilterUserV2" class="org.springframework.security.web.authentication.logout.LogoutFilter">
		<b:property name="filterProcessesUrl">
			<b:value>/webservice/rest/user/v2/authentication/logout</b:value>
		</b:property>
		<b:constructor-arg value="/webservice/rest/user/v2/authentication/" />
		<b:constructor-arg>
			<b:list>
				<b:ref bean="rememberMeService" />
				<b:bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />
			</b:list>
		</b:constructor-arg>
	</b:bean>

	<b:bean id="filterSecurityInterceptor" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
		<b:property name="authenticationManager" ref="authenticationManager" />
		<b:property name="accessDecisionManager" ref="accessDecisionManager" />

		<b:property name="securityMetadataSource">
			<sec:filter-security-metadata-source use-expressions="false" > 
				<sec:intercept-url pattern="/**/webservice/rest/admin/**" access="ROLE_ADMIN" />
				<sec:intercept-url pattern="/**/webservice/rest/delegation/**" access="ROLE_DELEGATION" />
				<sec:intercept-url pattern="/**/webservice/rest/safe/**" access="ROLE_SAFE" />
				<sec:intercept-url pattern="/**/webservice/rest/uploadproposition/**" access="ROLE_UPLOAD_PROPOSTION" />
				<sec:intercept-url pattern="/**/webservice/rest/**" access="ROLE_USER" />
				<sec:intercept-url pattern="/**" access="ROLE_USER" />
			</sec:filter-security-metadata-source>
		</b:property>
	</b:bean>

	<b:bean id="CORSRequestFilter" class="org.linagora.linshare.auth.CORSRequestFilter" />

	<b:bean id="basicExceptionTranslationFilter" class="org.springframework.security.web.access.ExceptionTranslationFilter">
		<b:constructor-arg ref="restAuthenticationEntryPoint" />
	</b:bean>

	<!-- AUTHENTICATION MANAGEMENT -->
	<!-- Authentication manager -->
	<b:bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager">
		<b:constructor-arg>
		<b:list>
			<b:ref bean="ssoAuthenticationProvider" />
			<b:ref bean="rememberMeAuthenticationProvider" />
			<b:ref bean="jwtAuthenticationProvider" />
			<b:ref bean="databaseAuthenticationProvider" />
			<b:ref bean="ldapAuthenticationProvider" />
		</b:list>
		</b:constructor-arg>
<!-- 		<b:constructor-arg ref="parent"/> -->
	</b:bean>

	<!-- DAO Authentification -->
	<b:bean id="passwordEncoderFactory" class="org.linagora.linshare.auth.PasswordEncoderFactory">
	</b:bean>
	
	<b:bean id="passwordEncoder" factory-bean="passwordEncoderFactory" factory-method="getInstance" />

	<b:bean id="databaseUserDetailsProvider" class="org.linagora.linshare.auth.dao.DatabaseUserDetailsProvider">
		<b:constructor-arg ref="authentificationFacade" />
		<b:property name="userRepositories">
			<b:list>
				<b:ref bean="guestRepository" />
				<b:ref bean="rootUserRepository" />
				<b:ref bean="technicalAccountRepository" />
			</b:list>
		</b:property>
	</b:bean>

	<!-- database accounts : guests, root, technical accounts, ... -->
	<b:bean id="databaseAuthenticationProvider" class="org.linagora.linshare.auth.dao.DatabaseAuthenticationProvider">
		<b:constructor-arg ref="databaseUserDetailsProvider" />
		<b:property name="passwordEncoder" ref="passwordEncoder" />
	</b:bean>

	<!-- Domain Authentification -->
	<b:bean id="ldapUserDetailsProvider" class="org.linagora.linshare.auth.dao.LdapUserDetailsProvider">
		<b:constructor-arg ref="authentificationFacade" />
	</b:bean>

	<b:bean id="ldapAuthenticationProvider" class="org.linagora.linshare.auth.dao.LdapAuthenticationProvider">
		<b:constructor-arg ref="ldapUserDetailsProvider" />
	</b:bean>

	<!-- SSO PreAuthentification -->
	<b:bean id="ssoAuthenticationProvider" class="org.linagora.linshare.auth.sso.SSOAuthenticationProvider">
		<b:property name="authentificationFacade" ref="authentificationFacade" />
	</b:bean>

	<!-- AUTHORIZATIONS MANAGEMENT -->
	<b:bean id="accessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased">
		<b:constructor-arg ref="roleVoter"/>
	</b:bean>

	<b:bean id="roleVoter" class="org.springframework.security.access.vote.RoleVoter" />

	<b:bean id="lemonLDAPFilter" class="org.linagora.linshare.auth.sso.PreAuthenticationHeader">
		<b:constructor-arg value="${sso.header.allowfrom.enable}" />
		<b:constructor-arg value="${sso.header.allowfrom}" />
		<b:property name="principalRequestHeader" value="${sso.header.user}" />
		<b:property name="domainRequestHeader" value="${sso.header.domain}" />
		<b:property name="authenticationManager" ref="authenticationManager" />
		<b:property name="rootUserRepository" ref="rootUserRepository" />
		<b:property name="userDetailsProvider" ref="ldapUserDetailsProvider" />
	</b:bean>

	<b:bean class="org.linagora.linshare.auth.sso.SSOInfoLogger"
		init-method="afterPropertiesSet">
		<b:constructor-arg ref="lemonLDAPFilter"/>
	</b:bean>

</b:beans>
